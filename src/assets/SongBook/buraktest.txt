A Light is an object that can be in one of only 3 states
	 setGreen();
	 setYellow();
	 setRed();
	 //setBlinkingYellow(); //maybe later for error conditions
	 
SynchronisedLights is an array of 1 or more Lights
	e.g. synchronisedLights = [n,s];

A TimedLightCycler is a limited time thread that operates on SynchronizedLights, switching lights on a timed pattern
e.g. Parameterised to delay on Red, hold on Green, hold on Yellow, back to Red
	timedLightCycler = function(safetyDelay,greenTime,yellowTime,synchronisedLights,cb)
	{
		setTimeout(safetyDelay,
			function(){
			  synchronisedLights.map(function(thisLight){ thisLight.setGreen(); });
				setTimeout(greenTime,
					function(){
						synchronisedLights.map(function(thisLight){ thisLight.setYellow(); });
						setTimeout(yellowTime,
							function(){
								synchronisedLights.map(function(thisLight){ thisLight.setRed(); });
								cb();
							}
						)
					}
				)
			}
		);
	}
	
A SynchronizedLightCycle is an array of SynchronizedLights with a repeating/perpetual index pointer
		addSynchronisedLights(synchronizedLights);
		SynchronizedLights next();
	
A conductor is a process that runs through synchronised light cycle according to some schedule
	e.g. one that allocates the same amount of time to both [n,s] & [e,w] perpetually		
	  conductor = function(slc)
		{
	    timedLightCycler(1000,20000,30000,slc.next(),conductor);	
		}



Then

  n,s,e,w = new Light();
	allLights = [n,s,e,w];

  allLights.map(function(thisLight){ thisLight.setRed(); });
		
  sl1 = [n,s];
	sl2 = [e,w];
	
	slc = new SynchronisedLightCycle();
	slc.addSynchronisedLights(sl1);
	slc.addSynchronisedLights(sl2);
	
  conductor(slc);


